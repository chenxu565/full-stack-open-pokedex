
name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]
      

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    env:
      SKIP_DEPLOY: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') && 'true' || 'false' }}
    outputs:
      skip_deploy: ${{ env.SKIP_DEPLOY }}
      deployed_url: ${{ steps.deploy.outputs.deployed_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 5
    
      - name: Print commit messages and check for skip
        run: |
          echo "Commit Messages:"
          echo '${{ toJson(github.event.commits.*.message) }}'
          echo "SKIP_DEPLOY: ${{ env.SKIP_DEPLOY }}"
  
      - name: Get Committer Username
        id: get_username
        run: |
          git log -5
          COMMITTER_NAME=$(git log -2 --pretty=format:'%an' | tail -n 1)
          echo "Committer Name: $COMMITTER_NAME"
          echo "username=$COMMITTER_NAME" >> $GITHUB_OUTPUT
      
      - uses: actions/setup-node@v4      
        with:          
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build
        id: build
        run: npm run build
      - name: Broadcast to Discord if build failed
        if: ${{ failure() && steps.build.outcome == 'failure' }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          text: Build failed!
          description: |
            commit
            https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }} by ${{ steps.get_username.outputs.username }} broke the build.
          details: ''
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test
        run: npm run test

      - name: e2e test
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:3000
      
      - name: Prepare to deploy to fly.io
        uses: superfly/flyctl-actions/setup-flyctl@master
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOY == 'false' }}
      - name: Deploy to fly.io
        id: deploy
        run: |
          flyctl deploy --remote-only | tee deploy-output.txt
          URL=$(grep -o 'https://[^ ]*' deploy-output.txt | tail -1)
          echo "deployed_url=$URL" >> $GITHUB_OUTPUT
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOY == 'false' }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  tag_release:
    if: ${{ github.event_name == 'push' && needs.simple_deployment_pipeline.outputs.skip_deploy == 'false' }}
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha}}
          fetch-depth: '0'
      
      - name: Get Committer Username
        id: get_username
        run: |
          git log -5
          COMMITTER_NAME=$(git log -1 --pretty=format:'%an' | tail -n 1)
          echo "Committer Name: $COMMITTER_NAME"
          echo "username=$COMMITTER_NAME" >> $GITHUB_OUTPUT

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      - name: Broadcast new version deployed to Discord
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          text: A new version of Pokedex deployed!
          description: |
            to ${{ needs.simple_deployment_pipeline.outputs.deployed_url }} by ${{ steps.get_username.outputs.username }}.
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}